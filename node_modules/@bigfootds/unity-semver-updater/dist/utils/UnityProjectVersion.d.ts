/**
 * An object mapping the data used to construct a semver string for various Unity-supported platforms, alongside some helper methods.
 * @author BigfootDS
 *
 * @export
 * @class
 */
export declare class UnityProjectVersion {
    private _major;
    private _minor;
    private _patch;
    private _quad;
    private _build;
    private _revision;
    releaseLabel: string;
    buildLabel: string;
    rawString: string;
    treatBuildAsPatch: boolean;
    treatRevisionAsQuad: boolean;
    constructor(major: number, minor: number, patch: number, quad: number, releaseLabel: string | undefined, buildLabel: string | undefined, rawString: string, treatBuildAsPatch?: boolean, treatRevisionAsQuad?: boolean);
    get major(): number;
    set major(newValue: number);
    get minor(): number;
    set minor(newValue: number);
    get patch(): number;
    set patch(newValue: number);
    get quad(): number;
    set quad(newValue: number);
    get build(): number;
    set build(newValue: number);
    get revision(): number;
    set revision(newValue: number);
    /**
     * Increment the major version number of this object by one, and reset the lower-tier version numbers to zero as per semver rules.
     * @author BigfootDS
     */
    bumpMajor(): void;
    /**
     * Increment the minor version number of this object by one, and reset the lower-tier version numbers to zero as per semver rules.
     * @author BigfootDS
     */
    bumpMinor(): void;
    /**
     * Increment the patch version number of this object by one, and reset the lower-tier version numbers to zero as per semver rules.
     * If this instance has `treatBuildAsPatch` set to `true`, then that will also increment.
     * @author BigfootDS
     */
    bumpPatch(): void;
    /**
     * Increment the quad version number of this object by one, and reset the lower-tier version numbers to zero as per semver rules.
     * If this instance has `treatRevisionAsQuad` set to `true`, then that will also increment.
     * @author BigfootDS
     */
    bumpQuad(): void;
    /**
     * Create a per-the-spec semver string from this instance's data.
     * @author BigfootDS
     *
     * @returns {string} A semver string with standard properties. Per the semver spec, this is just `major.minor.patch-releaseLabel+buildLabel` with values from the instance.
     */
    toString(): string;
    /**
     * Generate a semver string based on the instance's data.
     * @author BigfootDS
     *
     * @param {[string]} [formatRule="{major}.{minor}.{patch}"] Optional. Specify a custom format rule for the semver string. If no format rule is provided, it will use the default `major.minor.patch` format per the semver spec.
     * @returns {string} A semver string that follows the format rule if one was provided, or a default semver string per the spec if no format rule is provided.
     */
    toFormattedOutput(formatRule?: string): string;
}
